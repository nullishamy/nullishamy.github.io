---
import { getCollection } from 'astro:content';
import { type CollectionEntry } from 'astro:content'
import Project from '../../../layouts/Project.astro'

interface Props {
  entries: CollectionEntry<'project'>[]
}

export async function getStaticPaths() {
  const blogEntries = await getCollection('project');
  const tagToEntries: Record<string, CollectionEntry<'project'>[]> = {}
  for (const entry of blogEntries) {
    for (const tag of entry.data.tags) {
      const existing = tagToEntries[tag] ?? []
      existing.push(entry)
      tagToEntries[tag] = existing
    }
  }

  return Object.entries(tagToEntries).map(([tag, entries]) => ({
    params: { tag }, props: { entries }
  }))
}

const { entries } = Astro.props;
const posts = await Promise.all(entries.map(async e => [e, await e.render()]))
---
{posts.map(([entry, { Content }]) => (
  // <Post entry={entry}>
  //   <Content />
  // </Post>
  <h1>{JSON.stringify(entry)}</h1>
))}